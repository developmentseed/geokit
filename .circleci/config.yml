version: 2
jobs:
  geokit:
    docker:
      - image: docker:17.05.0-ce-git
    environment:
      - PRODUCTION_BRANCH: develop
    steps:
      - checkout
      - setup_remote_docker

      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - caches/geokit.node.tar
            - caches/geokit.python.tar
            - caches/geokit.java.tar

      - run:
          name: Load docker node image cache
          command: |
            docker load -i caches/geokit.node.tar || true

      - run:
          name: Load docker python image cache
          command: |
            docker load -i caches/geokit.python.tar || true

      - run:
          name: Load docker java image cache
          command: |
            docker load -i caches/geokit.java.tar || true
 
      - run:
          name: Build application docker node image
          command: |
            docker build --cache-from=geokit.node -t geokit.node Dockerfile.node

      - run:
          name: Build application docker java image
          command: |
            docker build --cache-from=geokit.java -t geokit.java Dockerfile.java

      - run:
          name: Build application docker python image
          command: |
            docker build --cache-from=geokit.python -t geokit.python Dockerfile.python

      - run:
          name: Save docker node image cache
          command: |
            mkdir -p caches
            docker save -o caches/geokit.node.tar geokit

      - run:
          name: Save docker python image cache
          command: |
            mkdir -p caches
            docker save -o caches/geokit.python.tar geokit

      - run:
          name: Save docker java image cache
          command: |
            mkdir -p caches
            docker save -o caches/geokit.java.tar geokit

      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - caches/geokit.node.tar
            - caches/geokit.python.tar
            - caches/geokit.java.tar

      - deploy:
          name: Push api Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "${PRODUCTION_BRANCH}" ]; then
              VERSION_NODE=node.latest
              VERSION_JAVA=java.latest
              VERSION_PYTHON=python.latest

            else
              VERSION_NODE=node."${CIRCLE_BRANCH}"
              VERSION_JAVA=java."${CIRCLE_BRANCH}"
              VERSION_PYTHON=python."${CIRCLE_BRANCH}"
            fi

            docker tag geokit.node developmentseed/geokit:${VERSION_NODE}
            docker tag geokit.java developmentseed/geokit:${VERSION_JAVA}
            docker tag geokit.python developmentseed/geokit:${VERSION_PYTHON}

            docker login --username $DOCKER_USER --password $DOCKER_TOKEN

            docker push developmentseed/geokit:${VERSION_NODE}
            docker push developmentseed/geokit:${VERSION_JAVA}
            docker push developmentseed/geokit:${VERSION_PYTHON}

workflows:
  version: 2
  build_and_push:
    jobs:
      - geokit
